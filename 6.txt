6.Bellman

import java.util.Scanner;

public class BellmanFord {
    private static final int INF = Integer.MAX_VALUE;

    public static void bellmanFord(int ver, int[][] g, int s) {
        int[] dist = new int[ver + 1];
        for (int i = 1; i <= ver; i++)
            dist[i] = INF;
        dist[s] = 0;

        for (int i = 1; i < ver; i++) {
            for (int u = 1; u <= ver; u++) {
                for (int v = 1; v <= ver; v++) {
                    if (g[u][v] != INF && dist[u] != INF && dist[u] + g[u][v] < dist[v]) {
                        dist[v] = dist[u] + g[u][v];
                    }
                }
            }
        }

        for (int u = 1; u <= ver; u++) {
            for (int v = 1; v <= ver; v++) {
                if (g[u][v] != INF && dist[u] != INF && dist[u] + g[u][v] < dist[v]) {
                    System.out.println("The graph contains a negative edge cycle");
                    return;
                }
            }
        }

        for (int i = 1; i <= ver; i++) {
            System.out.println("Distance from source " + s + " to " + i + " is " + (dist[i] == INF ? "INF" : dist[i]));
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter number of vertices:");
        int vertices = scanner.nextInt();
        int[][] graph = new int[vertices + 1][vertices + 1];
        System.out.println("Enter the adjacency matrix:");
        for (int i = 1; i <= vertices; i++) {
            for (int j = 1; j <= vertices; j++) {
                if (i != j) {
                    System.out.print("From " + i + "To" + j + "is :");
                    graph[i][j] = scanner.nextInt();
                }
                if (i != j && graph[i][j] == 0)
                    graph[i][j] = INF;
            }
        }
        System.out.println("Enter source vertex:");
        int source = scanner.nextInt();
        bellmanFord(vertices, graph, source);
        scanner.close();
    }
}